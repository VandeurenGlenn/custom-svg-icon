{"version":3,"file":"svg-icon.js","sources":["../src/svg-icon.js"],"sourcesContent":["'use strict';\r\nexport default Backed(class SvgIcon extends HTMLElement {\r\n\r\n  /**\r\n   * Attributes to observer\r\n   * @return {Array} ['icon']\r\n   */\r\n  static get observedAttributes() {\r\n    return ['icon'];\r\n  }\r\n\r\n  static get properties() {\r\n    return {\r\n      /**\r\n       * icon\r\n       * @param {string} value The desired icon.\r\n       * optional: you can create multiple iconsets\r\n       * by setting a different name on svg-iconset.\r\n       *\r\n       * **example:** ```html\r\n       * <svg-iconset name=\"my-icons\">\r\n       *   <g id=\"menu\">....</g>\r\n       * </svg-iconset>\r\n       * ```\r\n       * This means we can ask for the icon using a prefix\r\n       * **example:** ```html\r\n       * <reef-icon-button icon=\"my-icons::menu\"></reef-icon-button>\r\n       * ```\r\n       */\r\n      icon: {\r\n        observer: '__iconChanged__'\r\n      },\r\n\r\n      /**\r\n       * Iconset\r\n       * @return {object} window.svgIconset\r\n       * [checkout](svg-iconset.html) for more info.\r\n       */\r\n      iconset: {\r\n        value: window.svgIconset\r\n      }\r\n    }\r\n  }\r\n\r\n  ready() {\r\n    this.icon = this.getAttribute('icon');\r\n  }\r\n\r\n  __iconChanged__(change) {\r\n    if (change.value && this.iconset) {\r\n      let parts = change.value.split('::');\r\n      if (parts.length === 1) {\r\n        this.iconset['icons'].host.applyIcon(this, change.value);\r\n      } else {\r\n        this.iconset[parts[0]].host.applyIcon(this, parts[1]);\r\n      }\r\n    } else if(!change.value && this.iconset) {\r\n      let parts = this._icon.split('::');\r\n      if (parts.length === 1) {\r\n        this.iconset['icons'].host.removeIcon(this);\r\n      } else {\r\n        this.iconset[parts[0]].host.removeIcon(this);\r\n      }\r\n    }\r\n    this._icon = change.value;\r\n  }\r\n\r\n  /**\r\n   * Runs when attribute changes.\r\n   * @param {string} name The name of the attribute that changed.\r\n   * @param {string|object|array} oldValue\r\n   * @param {string|object|array} newValue\r\n   */\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    if (oldValue !== newValue) this[name] = newValue;\r\n  }\r\n});\r\n"],"names":["Backed","SvgIcon","HTMLElement","observedAttributes","properties","window","svgIconset","icon","getAttribute","change","value","iconset","parts","split","length","host","applyIcon","_icon","removeIcon","name","oldValue","newValue"],"mappings":";;;AACA,cAAeA,OAAO,MAAMC,OAAN,SAAsBC,WAAtB,CAAkC;aAM3CC,kBAAX,GAAgC;WACvB,CAAC,MAAD,CAAP;;aAGSC,UAAX,GAAwB;WACf;YAiBC;kBACM;OAlBP;eA0BI;eACAC,OAAOC;;KA3BlB;;UAgCM;SACDC,IAAL,GAAY,KAAKC,YAAL,CAAkB,MAAlB,CAAZ;;kBAGcC,MAAhB,EAAwB;QAClBA,OAAOC,KAAP,IAAgB,KAAKC,OAAzB,EAAkC;UAC5BC,QAAQH,OAAOC,KAAP,CAAaG,KAAb,CAAmB,IAAnB,CAAZ;UACID,MAAME,MAAN,KAAiB,CAArB,EAAwB;aACjBH,OAAL,CAAa,OAAb,EAAsBI,IAAtB,CAA2BC,SAA3B,CAAqC,IAArC,EAA2CP,OAAOC,KAAlD;OADF,MAEO;aACAC,OAAL,CAAaC,MAAM,CAAN,CAAb,EAAuBG,IAAvB,CAA4BC,SAA5B,CAAsC,IAAtC,EAA4CJ,MAAM,CAAN,CAA5C;;KALJ,MAOO,IAAG,CAACH,OAAOC,KAAR,IAAiB,KAAKC,OAAzB,EAAkC;UACnCC,QAAQ,KAAKK,KAAL,CAAWJ,KAAX,CAAiB,IAAjB,CAAZ;UACID,MAAME,MAAN,KAAiB,CAArB,EAAwB;aACjBH,OAAL,CAAa,OAAb,EAAsBI,IAAtB,CAA2BG,UAA3B,CAAsC,IAAtC;OADF,MAEO;aACAP,OAAL,CAAaC,MAAM,CAAN,CAAb,EAAuBG,IAAvB,CAA4BG,UAA5B,CAAuC,IAAvC;;;SAGCD,KAAL,GAAaR,OAAOC,KAApB;;2BASuBS,IAAzB,EAA+BC,QAA/B,EAAyCC,QAAzC,EAAmD;QAC7CD,aAAaC,QAAjB,EAA2B,KAAKF,IAAL,IAAaE,QAAb;;CAzEhB,CAAf;;;;"}