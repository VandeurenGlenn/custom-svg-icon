{"version":3,"file":"svg-icon.js","sources":["../src/svg-icon.js"],"sourcesContent":["'use strict';\r\nexport default Backed(class SvgIcon extends HTMLElement {\r\n  /**\r\n   * Attributes to observer\r\n   * @return {Array} ['icon']\r\n   */\r\n  static get observedAttributes() {\r\n    return ['icon'];\r\n  }\r\n  /**\r\n   * Create icon-button\r\n   * @param {object} opts Default options\r\n   * @param {number} opts.width The desired height for the svg.\r\n   * @param {number} opts.height The desired width for the svg.\r\n   * @param {string} opts.color The color to fill.\r\n   * @param {string} opts.stroke The stroke color.\r\n   */\r\n  constructor(opts={width: 24, height: 24, color: '#FFF', stroke: 'none'}) {\r\n    super();\r\n    this.root = this.attachShadow({mode: 'open'});\r\n    this.root.innerHTML = `\r\n    <style>\r\n      :host {\r\n        width: var(--svg-icon-size, ${opts.width}px);\r\n        height: var(--svg-icon-size, ${opts.height}px);\r\n        display: inline-flex;\r\n        display: -ms-inline-flexbox;\r\n        display: -webkit-inline-flex;\r\n        display: inline-flex;\r\n        -ms-flex-align: center;\r\n        -webkit-align-items: center;\r\n        align-items: center;\r\n        -ms-flex-pack: center;\r\n        -webkit-justify-content: center;\r\n        justify-content: center;\r\n        position: relative;\r\n        vertical-align: middle;\r\n        fill: var(--svg-icon-color, ${opts.color});\r\n        stroke: var(--svg-icon-stroke, ${opts.stroke});\r\n      }\r\n    </style>`;\r\n    this._onIconsetAdded = this._onIconsetAdded.bind(this);\r\n    window.addEventListener('svg-iconset-added', this._onIconsetAdded);\r\n  }\r\n  /**\r\n   * Iconset\r\n   * @return {object} window.svgIconset\r\n   * [checkout](svg-iconset.html) for more info.\r\n   */\r\n  get iconset() {\r\n    return window.svgIconset;\r\n  }\r\n  /**\r\n   * icon\r\n   * @param {string} value The desired icon.\r\n   * optional: you can create multiple iconsets\r\n   * by setting a different name on svg-iconset.\r\n   *\r\n   * **example:** ```html\r\n   * <svg-iconset name=\"my-icons\">\r\n   *   <g id=\"menu\">....</g>\r\n   * </svg-iconset>\r\n   * ```\r\n   * This means we can ask for the icon using a prefix\r\n   * **example:** ```html\r\n   * <reef-icon-button icon=\"my-icons::menu\"></reef-icon-button>\r\n   * ```\r\n   */\r\n  set icon(value) {\r\n    if (value && this.iconset) {\r\n      let parts = value.split('::');\r\n      if (parts.length === 1) {\r\n        this.iconset['icons'].host.applyIcon(this, value);\r\n      } else {\r\n        this.iconset[parts[0]].host.applyIcon(this, parts[1]);\r\n      }\r\n    } else if(!value && this.iconset) {\r\n      let parts = this._icon.split('::');\r\n      if (parts.length === 1) {\r\n        this.iconset['icons'].host.removeIcon(this);\r\n      } else {\r\n        this.iconset[parts[0]].host.removeIcon(this);\r\n      }\r\n    }\r\n    this._icon = value;\r\n  }\r\n  /**\r\n   * Applies the icon after iconset is added\r\n   */\r\n  _onIconsetAdded() {\r\n    if (this.hasAttribute('icon')) {\r\n      this.icon = this.getAttribute('icon');\r\n    }\r\n  }\r\n  /**\r\n   * Runs when attribute changes.\r\n   * @param {string} name The name of the attribute that changed.\r\n   * @param {string|object|array} oldValue\r\n   * @param {string|object|array} newValue\r\n   */\r\n  attributeChangedCallback(name, oldValue, newValue) {\r\n    if (oldValue !== newValue) this[name] = newValue;\r\n  }\r\n});\r\n"],"names":["Backed","opts","width","height","color","stroke","root","attachShadow","mode","innerHTML","_onIconsetAdded","bind","addEventListener","hasAttribute","icon","getAttribute","name","oldValue","newValue","window","svgIconset","value","iconset","parts","split","length","host","applyIcon","_icon","removeIcon","HTMLElement"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,cAAeA;;;;;;;;;2BAKmB;aACvB,CAAC,MAAD,CAAP;;;;;;;;;;;;;qBAUuE;QAA7DC,IAA6D,uEAAxD,EAACC,OAAO,EAAR,EAAYC,QAAQ,EAApB,EAAwBC,OAAO,MAA/B,EAAuCC,QAAQ,MAA/C,EAAwD;;;;;UAElEC,IAAL,GAAY,MAAKC,YAAL,CAAkB,EAACC,MAAM,MAAP,EAAlB,CAAZ;UACKF,IAAL,CAAUG,SAAV,0EAGkCR,KAAKC,KAHvC,mDAImCD,KAAKE,MAJxC,4cAiBkCF,KAAKG,KAjBvC,mDAkBqCH,KAAKI,MAlB1C;UAqBKK,eAAL,GAAuB,MAAKA,eAAL,CAAqBC,IAArB,OAAvB;WACOC,gBAAP,CAAwB,mBAAxB,EAA6C,MAAKF,eAAlD;;;;;;;;;;;;;;;;sCA+CgB;UACZ,KAAKG,YAAL,CAAkB,MAAlB,CAAJ,EAA+B;aACxBC,IAAL,GAAY,KAAKC,YAAL,CAAkB,MAAlB,CAAZ;;;;;;;;;;;;6CASqBC,IAnGZ,EAmGkBC,QAnGlB,EAmG4BC,QAnG5B,EAmGsC;UAC7CD,aAAaC,QAAjB,EAA2B,KAAKF,IAAL,IAAaE,QAAb;;;;2BApDf;aACLC,OAAOC,UAAd;;;;;;;;;;;;;;;;;;;;;yBAkBOC,KAnEI,EAmEG;UACVA,SAAS,KAAKC,OAAlB,EAA2B;YACrBC,QAAQF,MAAMG,KAAN,CAAY,IAAZ,CAAZ;YACID,MAAME,MAAN,KAAiB,CAArB,EAAwB;eACjBH,OAAL,CAAa,OAAb,EAAsBI,IAAtB,CAA2BC,SAA3B,CAAqC,IAArC,EAA2CN,KAA3C;SADF,MAEO;eACAC,OAAL,CAAaC,MAAM,CAAN,CAAb,EAAuBG,IAAvB,CAA4BC,SAA5B,CAAsC,IAAtC,EAA4CJ,MAAM,CAAN,CAA5C;;OALJ,MAOO,IAAG,CAACF,KAAD,IAAU,KAAKC,OAAlB,EAA2B;YAC5BC,SAAQ,KAAKK,KAAL,CAAWJ,KAAX,CAAiB,IAAjB,CAAZ;YACID,OAAME,MAAN,KAAiB,CAArB,EAAwB;eACjBH,OAAL,CAAa,OAAb,EAAsBI,IAAtB,CAA2BG,UAA3B,CAAsC,IAAtC;SADF,MAEO;eACAP,OAAL,CAAaC,OAAM,CAAN,CAAb,EAAuBG,IAAvB,CAA4BG,UAA5B,CAAuC,IAAvC;;;WAGCD,KAAL,GAAaP,KAAb;;;;EAnFwCS,WAA7B,EAAf;;;;"}